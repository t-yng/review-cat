name: release

on:
  push:
    branches:
      - production

jobs:
  release:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Build Application
        run: yarn build
        env:
          GITHUB_APP_CLIENT_ID: ${{ secrets.PROD_GITHUB_APP_CLIENT_ID }}
          GITHUB_APP_CLIENT_SECRET: ${{ secrets.PROD_GITHUB_APP_CLIENT_SECRET }}
      - name: Package app
        run: yarn package
      - name: Get npm version
        id: package-version
        run: |
          VERSION=$(node -pe "require('./package.json').version")
          echo "::set-output name=current-version::$VERSION"
      - name: Release
        uses: softprops/action-gh-release@v1
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          tag_name: v${{ steps.package-version.outputs.current-version }}
          generate_release_notes: true
          files: |
            ./packages/main/app/ReviewCat-${{ steps.package-version.outputs.current-version }}.dmg
      - name: Notify to Slack
        uses: 8398a7/action-slack@v3
        with:
          fields: repo,job
          status: ${{ job.status }}
          mention: channel
          if_mentions: always
          text: |
            v${{ steps.package-version.outputs.current-version }} „ÅÆ„É™„É™„Éº„Çπüéâ
            ${{ steps.release.outputs.url }}
          author_name: ${{ github.actor }}
          icon_emoji: ':octocat:'
          username: review-cat-bot
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
